user www-data;
worker_processes 4;

events {
        worker_connections 1024;
}

http {
    include    mime.types;
    server_tokens off;

    server {
	    server_name pikseli.org www.pikseli.org;
        root /var/www/pikseli.org/public;

        location = / {
            proxy_pass http://localhost:8081;
            proxy_set_header Host $host;
        }

        location / {
            # Nice to have, but some projects require these.
            #add_header Content-Security-Policy "script-src 'self'" always;
            #add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade";
            add_header Cache-Control "max-age=300";
            try_files $uri $uri/ /index.html @backend;
        }

        location @backend {
            proxy_pass http://localhost:8081;
            proxy_set_header Host $host;
        }

        location /aarrearkku {
            autoindex on;
        }

        location /ping {
            return 200 'pong';
            add_header Content-Type text/plain;
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/voimala.org/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/voimala.org/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    # Forward HTTP to HTTPS
    server {
        if ($host = www.pikseli.org) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        if ($host = pikseli.org) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name pikseli.org www.pikseli.org;
        listen 80;
        return 404; # managed by Certbot
    }
}
