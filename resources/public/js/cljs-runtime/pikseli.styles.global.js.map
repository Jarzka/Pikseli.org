{"version":3,"sources":["pikseli/styles/global.cljs"],"mappings":";;;;;AASA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAGL,AAAA,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAKC;AACL,AAAA,AAAKC;AAEL,AAAA,AAAMC,AAAUC;AAAhB,AAAA,AAAA,AAAA,AAAA,AAAA,AACgCH,AACZG;;AAEpB,AAAA,AAAMC,AAAWD;AAAjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgCH,AACAC,AACZE;;AAEpB,AAAA,AAAME,AAAWF;AAAjB,AAAA,AAAA,AAAA,AAAA,AAAA,AACgCF,AACZE;;AAMpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACG;AAID,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAID,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAID,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAKD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAAc,AAAA,AAAA,AAAIC,AACJ,AAAA,AAAA,AAAIA,AAEF,AAAA,AAAA,AAAIA;AAEzB,AAAA,AAAA,AAAA,AAAKC;AAML,AAAA,AAAA,AAAA,AAACC,AAAoC,AAAA,AAAOH;AAE5C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACI;AAGD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAGD,AAAA,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAA,AAAA,AAAKC;AAML,AAAA,AAAA,AAAKC,AAAU,AAAA,AAASP;AAExB,AAAA,AAACI,AAAiB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACI,AAAMD,AAOgB,AAAA,AAAqB,AAAA,AAASP;AAEvE,AAAA,AAACI,AAAiB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACI,AAAMD;AAKzB,AAAA,AAACH,AAAiB,AAAA,AAAA,AAAA,AAACI,AAAMD;AAGzB,AAAA,AAACH,AAAiB,AAAA,AAAA,AAAA,AAAA,AAAA,AAACI,AAAMD;AAQzB,AAAA,AAAA,AAAA,AAAKE;AACL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAAa,AAAA,AAAOV,AAIqB,AAAA,AAAOA,AACP,AAAA,AAACW,AACD,AAACC;AAE/C,AAAA,AAACR,AAAgBM;AAEjB,AAAA,AAAMG,AAAeC;AAArB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGuB,AAAA,AAAA,AAA2B,AAACC,AAAKD;;AAMxD,AAAKE,AAAO,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACR,AAAME;AAMnB,AAAKO,AAAS,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACT,AACCC,AAKO,AAAA,AAAOT;AAsB9B,AAAA,AAAMkB;AAAN,AACE,AAACC","names":["pikseli.styles.global/center-block","pikseli.styles.global/inline-block","pikseli.styles.global/hidden","pikseli.styles.global/phone-width","pikseli.styles.global/tablet-width","pikseli.styles.global/on-phone","style","pikseli.styles.global/on-tablet","pikseli.styles.global/on-mobile","stylefy.core/font-face","pikseli.styles.global/colors","pikseli.styles.settings/dark-mode?","pikseli.styles.global/text-small","stylefy.core/class","stylefy.core/tag","pikseli.styles.global/text-center","pikseli.styles.global/text-smaller","pikseli.styles.global/h","cljs.core.merge","pikseli.styles.global/clickable","pikseli.styles.global/link","garden.color/lighten","garden.color/as-hex","pikseli.styles.global/a-some-before","some","cljs.core/name","pikseli.styles.global/a-some","pikseli.styles.global/a-button","pikseli.styles.global/init-styles","stylefy.core.init"],"sourcesContent":["(ns pikseli.styles.global\r\n  (:require [stylefy.core :as stylefy]\r\n            [pikseli.styles.settings :as style-settings]\r\n            [garden.color :as color]))\r\n\r\n;; ****************************************************************\r\n;; Utils\r\n;; ****************************************************************\r\n\r\n(def center-block {:margin-left \"auto\"\r\n                   :margin-right \"auto\"})\r\n\r\n(def inline-block {:display \"inline-block\"})\r\n\r\n(def hidden {:display \"none\"})\r\n\r\n(def phone-width \"400px\")\r\n(def tablet-width \"768px\")\r\n\r\n(defn on-phone [style]\r\n  {::stylefy/media {{:max-width phone-width}\r\n                    style}})\r\n\r\n(defn on-tablet [style]\r\n  {::stylefy/media {{:min-width phone-width\r\n                     :max-width tablet-width}\r\n                    style}})\r\n\r\n(defn on-mobile [style]\r\n  {::stylefy/media {{:max-width tablet-width}\r\n                    style}})\r\n\r\n;; ****************************************************************\r\n;; Fonts & Colors\r\n;; ****************************************************************\r\n\r\n(stylefy/font-face {:font-family \"open_sans\"\r\n                    :src \"url('../fonts/OpenSans-Regular-webfont.woff') format('woff')\"\r\n                    :font-weight \"normal\"\r\n                    :font-style \"normal\"})\r\n(stylefy/font-face {:font-family \"open_sans\"\r\n                    :src \"url('../fonts/OpenSans-BoldItalic-webfont.woff') format('woff')\"\r\n                    :font-weight \"bold\"\r\n                    :font-style \"italic\"})\r\n(stylefy/font-face {:font-family \"open_sans\"\r\n                    :src \"url('../fonts/OpenSans-Bold-webfont.woff') format('woff')\"\r\n                    :font-weight \"bold\"\r\n                    :font-style \"normal\"})\r\n(stylefy/font-face {:font-family \"open_sans\"\r\n                    :src \"url('../fonts/OpenSans-Italic-webfont.woff') format('woff')\"\r\n                    :font-weight \"normal\"\r\n                    :font-style \"italic\"})\r\n\r\n(def colors {:text (if style-settings/dark-mode? \"#eaeaea\" \"#121212\")\r\n             :link (if style-settings/dark-mode? \"#46aee5\" \"#b9511a\")\r\n             :background-secondary \"rgba(14, 31, 40, 0.85)\"\r\n             :header (if style-settings/dark-mode? \"#eaeaea\" \"#121212\")})\r\n\r\n(def text-small {:font-size \"0.8rem\"})\r\n\r\n;; ****************************************************************\r\n;; Text\r\n;; ****************************************************************\r\n\r\n(stylefy/class \"body-loaded\" {:color (:text colors)})\r\n\r\n(stylefy/tag \"p\" {:margin-top \"0\"\r\n                  :margin-bottom \"1rem\"})\r\n\r\n(stylefy/tag \"blockquote\" {:font-style :italic\r\n                           :padding-left \"1rem\"})\r\n\r\n(def text-center {:text-align :center})\r\n\r\n(def text-smaller {:font-size \"0.8rem\"})\r\n\r\n;; ****************************************************************\r\n;; Headings\r\n;; ****************************************************************\r\n\r\n(def h {:color (:header colors)})\r\n\r\n(stylefy/tag \"h1\" (merge h\r\n                         {:margin-top \"1.5rem\"\r\n                          :margin-bottom \"0.6rem\"\r\n                          :padding \"0.5rem\"\r\n                          :font-size \"1.6rem\"\r\n                          :font-weight :bold\r\n                          ::stylefy/mode {:first-of-type {:margin-top 0}}\r\n                          :border-bottom (str \"0.1rem solid \" (:header colors))}))\r\n\r\n(stylefy/tag \"h2\" (merge h\r\n                         {:margin-top \"1rem\"\r\n                          :margin-bottom \"1rem\"\r\n                          :font-size \"1.2rem\"}))\r\n\r\n(stylefy/tag \"h3\" (merge h\r\n                         {:font-size \"1.1rem\"}))\r\n\r\n(stylefy/tag \"h4\" (merge h\r\n                         {:font-size \"1.0rem\"\r\n                          :margin-bottom \"0\"}))\r\n\r\n;; ****************************************************************\r\n;; Links & Buttons\r\n;; ****************************************************************\r\n\r\n(def clickable {:cursor \"pointer\"})\r\n(def link {:color (:link colors)\r\n           :text-decoration \"none\"\r\n           :transition-property \"color\"\r\n           :transition-duration \"0.3s\"\r\n           ::stylefy/mode {:hover {:color (-> (:link colors)\r\n                                              (color/lighten 10)\r\n                                              (color/as-hex))}}})\r\n\r\n(stylefy/tag \"a\" link)\r\n\r\n(defn a-some-before [some]\r\n  {::stylefy/mode\r\n   {:before\r\n    {:background-image (str \"url(\\\"/images/some_\" (name some) \".png\\\")\")\r\n     :background-repeat \"no-repeat\"\r\n     :background-size \"80%\"\r\n     :content \"\\\"\\\"\"\r\n     :padding-left \"2rem\"}}})\r\n\r\n(def a-some (merge link\r\n                   {:display \"block\"\r\n                    :margin-top 0\r\n                    :margin-bottom 0\r\n                    :height \"2rem\"}))\r\n\r\n(def a-button (merge\r\n                clickable\r\n                {:display \"block\"\r\n                :overflow \"hidden\"\r\n                :min-width \"120px\"\r\n                :height \"35px\"\r\n                :color (:text colors)\r\n                :margin-right \"5px\"\r\n                :margin-bottom \"5px\"\r\n                :text-align \"center\"\r\n                :padding-top \"5px\"\r\n                :padding-bottom \"5px\"\r\n                :padding-left \"10px\"\r\n                :padding-right \"10px\"\r\n                :text-decoration \"none\"\r\n                :box-shadow \"0px 1px 3px rgba(000,000,000,0.5), inset 0px 0px 2px rgba(255,255,255,0.7)\"\r\n                :text-shadow \"0px -1px 0px rgba(000,000,000,0.4), 0px 1px 0px rgba(255,255,255,0.3)\"\r\n                :background \"linear-gradient(to bottom, #46a9de 0%, #1a527a)\"\r\n                ::stylefy/mode {:hover\r\n                                {:background \"linear-gradient(to bottom, #51bffb 0%, #216ca2)\"}}\r\n                :box-sizing \"border-box\"\r\n                :border \"1px solid black\"\r\n                :border-radius \"5px\"}))\r\n\r\n;; ****************************************************************\r\n;; API\r\n;; ****************************************************************\r\n\r\n(defn init-styles []\r\n  (stylefy/init))"]}