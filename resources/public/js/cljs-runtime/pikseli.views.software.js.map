{"version":3,"sources":["pikseli/views/software.cljs"],"mappings":";;;;;;;;;AASA,AAAA,AAAOA;AAAP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAeA,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAA4BM;AAA5B,AAAAF,AAAAJ,AAAA,AAAkCO;AAAlC,AAAAH,AAAAJ,AAAA,AAAuCQ;AAAvC,AAAAJ,AAAAJ,AAAA,AAAiDS;AAAjD,AAAAL,AAAAJ,AAAA,AAAuDU;AAAvD,AAAAN,AAAAJ,AAAA,AAAmEW;AAAnE,AAAAP,AAAAJ,AAAA,AAA8EY;AAA9E,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACa,AAACC,AAAUC,AACa,AAAA,AAAgBH,AAEjCL,AACFM,AACd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMJ,AACiBA,AACvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMC,AACiBA,AACvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMC,AACiBA,AACaH;;AAExC,AAAA,AAAOQ;AAAP,AACE,AAAMC,AAAW,AAAA,AAACC;AAAlmB,AAACJ,AAAUK,AACzBb,AAMAA,AAKAA,AAOI,AAACQ,AAAU,AAAA,AAAAM,AAAA,AAAA,AAAWH,AAAWI,AACtB,AAACP,AAAUK,AACzBb,AASAA,AAOAA,AAMDP,AAMF,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAWH,AACRK;AADH,AACyB,AAAA,AAACC,AAAON;AADjC;;;AAGP,AAAA,AAAMO;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIIC,AAGAT","names":["pikseli.views.software/libraries","p__27904","map__27905","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","pikseli.views.software/project-card","title","date","live-demo","video","source-code","image-file","desc","stylefy.core.use_style","pikseli.styles.views.software/card","pikseli.views.software/software-projects","show-more?","reagent.core.atom","pikseli.styles.views.software/card-deck","cljs.core/deref","pikseli.styles.global/hidden","pikseli.ui.general/button","cljs.core/reset!","pikseli.views.software/software","pikseli.ui.general/blockquote"],"sourcesContent":["(ns pikseli.views.software\r\n  (:require [reagent.core :as r]\r\n            [cljs-time.core :as t]\r\n            [cljs-time.format :as f]\r\n            [stylefy.core :refer [use-style sub-style use-sub-style]]\r\n            [pikseli.ui.general :as ui]\r\n            [pikseli.styles.views.software :as pstyle]\r\n            [pikseli.styles.global :as g-styles]))\r\n\r\n(defn- libraries []\r\n  [:div\r\n   [:h2 \"Software libraries\"]\r\n   [:ul\r\n    [:li\r\n     [:a {:href \"https://github.com/Jarzka/namespacefy\"}\r\n      \"namespacefy\"]\r\n     [:span \" \"]\r\n     \"is a simple Clojure(Script) library which aims to make it easy to keep keys namespaced.\"]\r\n    [:li\r\n     [:a {:href \"https://github.com/Jarzka/stylefy\"}\r\n      \"stylefy\"]\r\n     [:span \" \"]\r\n     \" makes it possible to define UI component styles as Clojure data.\"]]])\r\n\r\n(defn project-card [{:keys [title date live-demo video source-code image-file desc]}]\r\n  [:div.card (use-style pstyle/card)\r\n   [:img.card-img-top {:alt \"\", :src (str \"/images/\" image-file)}]\r\n   [:div.card-body\r\n    [:h5.card-title title]\r\n    [:p.card-text desc]\r\n    (when live-demo\r\n      [:a.card-link {:href live-demo} \"Live demo\"])\r\n    (when video\r\n      [:a.card-link {:href video} \"Video\"])\r\n    (when source-code\r\n      [:a.card-link {:href source-code} \"Source code\"])]\r\n   [:div.card-footer [:small.text-muted date]]])\r\n\r\n(defn- software-projects []\r\n  (let [show-more? (r/atom false)]\r\n    (fn []\r\n      [:div\r\n       [:div.card-deck (use-style pstyle/card-deck)\r\n        [project-card {:title \"Ajokit\"\r\n                       :source-code \"https://github.com/Jarzka/Ajokit\"\r\n                       :live-demo \"projects/ajokit\"\r\n                       :image-file \"ajokit.jpg\"\r\n                       :date \"10.10.2015\"\r\n                       :desc \"A simple grid-based traffic simulation application which also has a real-time map editing capability. Technologies: JavaScript & Three.js.\"}]\r\n        [project-card {:title \"Solita Rooms\"\r\n                       :source-code \"https://github.com/solita/solita-rooms\"\r\n                       :image-file \"rooms2.png\"\r\n                       :date \"1.5.2018\"\r\n                       :desc \"Solita Rooms is a web application which can be used to view Microsoft Exchange room bookings. Technologies: ClojureScript & C#.\"}]\r\n        [project-card {:title \"JarzkaChess\"\r\n                       :source-code \"https://github.com/Jarzka/JarzkaChess\"\r\n                       :image-file \"jarzkachess.png\"\r\n                       :date \"15.2.2014\"\r\n                       :video \"https://www.youtube.com/watch?v=viFZeI8uAVU\"\r\n                       :desc \"A chess game which includes an artifical intelligence to challenge beginning chess players. Technologies: Java.\"}]]\r\n\r\n       [:div (use-style (when-not @show-more? g-styles/hidden))\r\n        [:div.card-deck (use-style pstyle/card-deck)\r\n         [project-card {:title \"MyRTS\"\r\n                        :source-code \"https://github.com/Jarzka/MyRTS\"\r\n                        :image-file \"myrts.jpg\"\r\n                        :date \"18.4.2014\"\r\n                        :video \"https://www.youtube.com/watch?v=OEy6PhbeE_Y\"\r\n                        :desc [:span\r\n                               \"Multiplayer RTS prototype. The architecture supports some basic features like giving simple commands to units and synchronizing the game over network using simultaneous simulations with\"\r\n                               \" \" [:a {:href \"https://www.gamasutra.com/view/feature/131503/1500_archers_on_a_288_network_.php\"} \"lockstep-like model\"]\r\n                               \". Technologies: Java & libgdx.\"]}]\r\n         [project-card {:title \"PresentationApp\"\r\n                        :image-file \"presentation_app.png\"\r\n                        :source-code \"https://github.com/Jarzka/PresentationApp\"\r\n                        :date \"25.8.2014\"\r\n                        :live-demo \"projects/presentation_app\"\r\n                        :desc \"A simple HTML5 application that can be used to create PowerPoint-like presentations. Technologies: JavaScript.\"}]\r\n\r\n         [project-card {:title \"ThisSimpleMarquee\"\r\n                        :image-file \"thissimplemarquee.png\"\r\n                        :source-code \"https://github.com/Jarzka/ThisSimpleMarquee\"\r\n                        :live-demo \"projects/thissimplemarquee/\"\r\n                        :date \"4.9.2014\"\r\n                        :desc \"A simple HTML5 marquee library. Technologies: JavaScript.\"}]]\r\n        [libraries]\r\n        [:p \"See all of my public software projects on my\"\r\n         \" \"\r\n         [:a {:href \"https://github.com/Jarzka\"} \"GitHub profile\"]\r\n         \".\"]]\r\n\r\n       (when-not @show-more?\r\n         [ui/button {:on-click #(reset! show-more? true)} \"Show more software projects\"])])))\r\n\r\n(defn software []\r\n  [:section\r\n   [:a {:id \"software\"}]\r\n   [:h1 \"Software\"]\r\n   [ui/blockquote\r\n    \"Our civilization depends critically on software; it had better be quality software.\"\r\n    \"Bjarne Stroustrup\"]\r\n   [software-projects]])\r\n"]}