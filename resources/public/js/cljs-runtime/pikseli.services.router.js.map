{"version":3,"sources":["pikseli/services/router.cljs"],"mappings":";;;;;;;AAOA,AAAA,AAAMA;AAAN,AACE,AAAA,AAAIC;;AAEN,AAAA,AAAMC;AAAN,AACE,AAAA,AAAID;;AAEN,AAAKE,AAAI,AAACC,AAAO,AAACF;AAElB,AAAA,AAAMG;AAAN,AACE,AAACC,AACC,AAACN,AACD,AAACE;;AAEL,AAAA,AAAMK;AAAN,AACE,AAACC,AAAsB,AAACC,AAAyB,AAACP;;AAEpD,AAAA,AAAMQ,AAAaC;AAAnB,AACE,AAACC,AAAOT,AAAIQ;;AACZ,AAACJ;;AAGH,AAAA,AAAmBN,AACA;AAAA,AACE,AAACS,AAAY,AAACR","names":["pikseli.services.router/read-host","js/window","pikseli.services.router/read-uri","pikseli.services.router/uri","reagent.core.atom","pikseli.services.router/uri-is-blog?","pikseli.router/uri-is-blog?","pikseli.services.router/update-title!","pikseli.services.dom/set-title","pikseli.page-settings/page-title","pikseli.services.router/update-uri!","new-uri","cljs.core/reset!"],"sourcesContent":["(ns pikseli.services.router\r\n  (:require [clojure.string :as string]\r\n            [pikseli.router :as router]\r\n            [reagent.core :as r]\r\n            [pikseli.page-settings :as page-settings]\r\n            [pikseli.services.dom :as dom-service]))\r\n\r\n(defn read-host []\r\n  (-> js/window .-location .-host))\r\n\r\n(defn read-uri []\r\n  (.. js/window -location -pathname))\r\n\r\n(def uri (r/atom (read-uri)))\r\n\r\n(defn uri-is-blog? []\r\n  (router/uri-is-blog?\r\n    (read-host)\r\n    (read-uri)))\r\n\r\n(defn update-title! []\r\n  (dom-service/set-title (page-settings/page-title (read-uri))))\r\n\r\n(defn update-uri! [new-uri]\r\n  (reset! uri new-uri)\r\n  (update-title!))\r\n\r\n; Listen back button\r\n(.addEventListener js/window \"popstate\"\r\n                   (fn []\r\n                     (update-uri! (read-uri))))"]}